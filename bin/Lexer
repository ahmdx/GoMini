
import java.lang.System;
import java.io.*;
import java_cup.runtime.Symbol;
%%
%class Lexer

%implements java_cup.runtime.Scanner
%function next_token
%type java_cup.runtime.Symbol
%char
%line


%{
	//initialize  variables to be used by class
%}


%init{

//Add code to be executed on initialization of the lexer

%init}

%state DOC

%eofval{
	return new Symbol(sym.EOF, null);
%eofval}


ALPHA = [a-zA-Z]
ALPHA_ = [a-zA-Z_]
ALPHANUM = [a-zA-Z0-9]
ALPHANUM_ = [a-zA-Z0-9_]
WHITESPACE=([\n\r ]+)
NEWLINE=(\\\\)

START=(\\documentclass\{(.)+\})
PACKAGE=(\\usepackage\[(.)+\]\{(.)+\})
COMMENT=(\%(.)*)

BEGIN_DOC=(\\begin\{document\})
END_DOC=(\\end\{document\})

TITLE=(\\title)
DATE=(\\date)
SECTION=(\\section)
BF=(\\textbf)
MAKE=(\\maketitle)
TEXT=(\{(.)+\})
BODY=(([^\n\\\{\}\%\r])+)

%% 
{COMMENT} {}
{WHITESPACE} {}



<YYINITIAL> {START} { return (new Symbol(sym.DOC_CLASS,yytext()));}
<YYINITIAL> {PACKAGE} { return (new Symbol(sym.PACKAGE,yytext()));}

<YYINITIAL> {BEGIN_DOC} { 
	yybegin(DOC);
	return (new Symbol(sym.BEGIN_DOC, yytext()));
}
<DOC> 		{END_DOC} {
	yybegin(YYINITIAL);
	return (new Symbol(sym.END_DOC, yytext()));
}



<DOC> 		{TITLE} { return (new Symbol(sym.TITLE,yytext()));}
<DOC> 		{DATE} { return (new Symbol(sym.DATE,yytext()));}
<DOC> 		{SECTION} { return (new Symbol(sym.SECTION,yytext()));}
<DOC> 		{BF} { return (new Symbol(sym.BF,yytext()));}
<DOC> 		{MAKE} { return (new Symbol(sym.MAKE,yytext()));}
<DOC> 		{TEXT} { return (new Symbol(sym.TEXT,yytext()));}
<DOC> 		{NEWLINE} { return new Symbol(sym.NEWLINE, yytext());}
<DOC> 		{BODY} { return (new Symbol(sym.BODY,yytext()));}
. { return new Symbol(sym.error, "Invalid input: " + yytext()); }